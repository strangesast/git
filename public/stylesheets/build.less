@tree-element-height: 60px;
@navigation-height: 40px;

.active-mixin {
  filter: invert(100%);
}

.hoverlink {
  color: inherit;
  text-decoration: none;
  &:hover {
    cursor: pointer;
    text-decoration: underline;
  }
}

.tree {
  flex-grow: 1;
  min-width: 0;
  position: relative;

  .tree-filters {
    display: flex;
    flex-direction: row;
    flex-wrap: wrap;
    & > div {
      height: @navigation-height;
      line-height: @navigation-height;
      & > span {
        margin: 6px;
      }
      .remove {
        color: inherit;
        text-decoration: none;
        &:hover {
          cursor: pointer;
        }
      }
    }
  }
  &.dragging {
    & > .tree-element > .mask {
      display: block;
    }
  }
}

.tree-element {
  position: relative;
  height: @tree-element-height;
  z-index: 5;
  display: flex;
  align-items: center;
  transition: transform 0.2s ease;

  a, span, i {
    white-space: nowrap;
    &:not(.icon):not(.spacer):not(.name) {
      margin: 0 10px;
      overflow: hidden;
      text-overflow: ellipsis;
    }
  }

  .edit {
    span {
      margin: 0;
    }
    .hoverlink;
    display: none;
  }
  .name:hover + .edit, .edit:hover {
    display: block;
  }

  &:focus, &.active {
    outline: none;
    .active-mixin;
  }
  &.fake {
    position: absolute;
    right: 0;
    top: 0;
    left: 0;
    z-index: 4;
    .active-mixin;
    &.hidden {
      opacity: 0;
    }
  }
  .mask.left, .mask.right {
    display: none;
    position: absolute;
    width: 50%;
    height: 100%;
    top: 0;
    opacity: 0;
  }
  .mask.left {
    left: 0;
  }
  .mask.right {
    right: 0;
  }
  &.hover {
    outline: 2px solid black;
    & ~ .tree-element:not(.fake) {
      transform: translateY(@tree-element-height);
    }
  }
  .generate-levels(10);
  .generate-levels(@n, @i: 0) when(@i =< @n) {
    &[level='@{i}'] {
      margin-left: @i * 20px;
    }
    .generate-levels(@n, (@i + 1));
  }
}
.tree.short > .tree-element {
  height: @tree-element-height/2;
  &.hover {
    outline: 2px solid black;
    & ~ .tree-element:not(.fake) {
      transform: translateY(@tree-element-height/2);
    }
  }
}
.search-result, .tree-element {
  background: white;
  //transition: transform 0.2s ease;

  &.dragged {
    opacity: 0.5;
  }
}
